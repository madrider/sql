/****************************************************************************************
* File		: LAB 6 TCLS.txt								*
* Author	: Arun Rajachandar R						*
*****************************************************************************************/
 select * from ALL_TAB_COLUMNS;
 //1
 //1.1

 set serveroutput on
DECLARE
 CURSOR objects IS select object_name,object_type from all_objects;
 lv_ob all_objects%ROWTYPE;
 BEGIN
  OPEN objects;
    LOOP
      FETCH objects INTO lv_ob.object_name,lv_ob.object_type;
      EXIT WHEN objects%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(lv_ob.object_name||' '||lv_ob.object_type);
    END LOOP;
  END objects;
 
 //1.2
select * from ALL_TABLES where owner=user;
 set serveroutput on
DECLARE
 CURSOR objects IS select object_name,object_type from all_objects where owner='user';
 lv_ob all_objects%ROWTYPE;
 BEGIN
  OPEN objects;
    LOOP
      FETCH objects INTO lv_ob.object_name,lv_ob.object_type;
      EXIT WHEN objects%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(lv_ob.object_name||' '||lv_ob.object_type);
    END LOOP;
  END objects;
  ==============================================================================
//1.3
 set serveroutput ON
  declare
                CURSOR table_name IS select OBJECT_NAME from ALL_OBJECTS where OBJECT_TYPE='TABLE';
                CURSOR column_name(lv_tab_name varchar2) IS SELECT column_name from ALL_TAB_COLUMNS where table_name=lv_tab_name;
                lv_t_n ALL_OBJECTS.OBJECT_NAME%TYPE;
                lv_c_n ALL_TAB_COLUMNS.TABLE_NAME%TYPE;
  BEGIN
          open table_name;
                  LOOP
                    FETCH table_name into lv_t_n;
                    EXIT WHEN table_name%notfound;
                    DBMS_OUTPUT.PUT_LINE(lv_t_n||' ');
                        OPEN column_name(lv_t_n);
                                LOOP
                                    FETCH column_name INTO lv_c_n;
                                    EXIT WHEN column_name%notfound;
                                    DBMS_OUTPUT.PUT_LINE(' '||lv_c_n);
                                END LOOP;
                        CLOSE column_name;              
              
                  END LOOP;
          close table_name;
 
  END;
  ==============================================================================
//1.4
  set serveroutput on
  DECLARE
  CURSOR table_name IS select object_name from ALL_OBJECTS where OBJECT_TYPE='TABLE';
  CURSOR cons_name(tb_n varchar2) IS select column_name,constraint_name from ALL_CONS_COLUMNS where table_name=tb_n;
  lv_const ALL_CONS_COLUMNS.COLUMN_NAME%TYPE;
  lv_col ALL_CONS_COLUMNS.CONSTRAINT_NAME%TYPE;
  lv_tab ALL_OBJECTS.OBJECT_NAME%TYPE;
  BEGIN
    OPEN table_name;
      LOOP
        FETCH table_name INTO lv_tab;
        EXIT WHEN table_name%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(lv_tab||'    ');
        OPEN cons_name(lv_tab);
            LOOP
              FETCH cons_name INTO lv_const,lv_col;
              EXIT WHEN cons_name%NOTFOUND;
              DBMS_OUTPUT.PUT_LINE(lv_const||'    '||lv_col);
            END LOOP;            
        close cons_name;
      END LOOP;
    close table_name;
  END;
  ========================================================================
//1.5
set serveroutput on
  DECLARE
    CURSOR table_name IS select object_name from ALL_OBJECTS where object_type='TABLE';
    CURSOR cons_name(tn varchar2) IS select constraint_name from ALL_CONSTRAINTS where table_name=tn;
    
    lv_tab ALL_OBJECTS.OBJECT_NAME%TYPE;
    lv_cons ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
  BEGIN
    OPEN table_name;
      LOOP
        FETCH table_name into lv_tab;
        EXIT WHEN table_name%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(lv_tab||'  ');
        OPEN cons_name(lv_tab);
          LOOP
            FETCH cons_name into lv_cons;
            EXIT WHEN cons_name%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(' '||lv_cons);
          END LOOP;
        close cons_name;
      END LOOP;
    close table_name;
  END;
  
  
==============
//1.6
select * from ALL_VIEWS;
select * from ALL_OBJECTS;
set serveroutput on
DECLARE 
  CURSOR v IS select view_name,text from ALL_VIEWS;
  lv_v ALL_VIEWS%ROWTYPE;
  
  BEGIN
    OPEN v;
      LOOP
        FETCH v INTO lv_v.view_name,lv_v.text;
        EXIT WHEN v%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(lv_v.view_name||'  '||lv_v.text);
      END LOOP;
    close v;
  END;
  ========================================================================================
  //1.7
  select * from ALL_SEQUENCES;
  set serveroutput on
DECLARE 
  CURSOR S IS select SEQUENCE_NAME,LAST_NUMBER from ALL_SEQUENCES;
  lv_S ALL_SEQUENCES%ROWTYPE;
  
  BEGIN
    OPEN S;
      LOOP
        FETCH S INTO lv_S.SEQUENCE_NAME,lv_S.LAST_NUMBER;
        EXIT WHEN S%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(lv_S.SEQUENCE_NAME||'  '||lv_S.LAST_NUMBER);
      END LOOP;
    close S;
  END;
  ==========================================
  //1.8
  select * from ALL_SYNONYMS;
  select * from ALL_OBJECTS; join ALL_SYNONYM;
  set serveroutput on
  DECLARE
    CURSOR obj IS select object_name from ALL_OBJECTS where object_type='TABLE';
    CURSOR syn(tbn varchar2) IS select synonym_name from ALL_SYNONYMS where table_name=tbn;
   objn ALL_OBJECTS.OBJECT_NAME%TYPE;
   synn ALL_SYNONYMS.SYNONYM_NAME%TYPE;
  BEGIN
    OPEN obj;
      LOOP
        FETCH obj into objn;
        EXIT WHEN obj%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(objn);
        OPEN syn(objn);
          LOOP
            FETCH syn into synn;
            EXIT WHEN syn%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('                         '||synn);
          END LOOP;
        CLOSE syn;
        
      END LOOP;
    CLOSE obj;
  END;
=================================================================================================
//1.9
select * from ALL_OBJECTS where OBJECT_TYPE='INDEX';
select * from ALL_INDEXES;
set serveroutput on
DECLARE 
  CURSOR indexs is select index_name from ALL_INDEXES;
  n ALL_INDEXES.INDEX_NAME%TYPE;
  BEGIN
    OPEN indexs;
      LOOP
        FETCH indexs INTO n;
        EXIT WHEN indexs%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(n);
      END LOOP;
    CLOSE indexs;
  END;